class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int n = nums.size();
        vector<int> pref(n), suff(n);
        suff[n - 1] = nums[n - 1];
        for(int i = n - 2;i >= 0;i--) {
            if(nums[i]) {
                suff[i] = 1 + suff[i + 1];
            } else {
                suff[i] = 0;
            }
        }
        
        int ans = 0;
        int left = 0;
        for(int i = 0;i < n;i++) {
            int right = i < n - 1 ? suff[i + 1] : 0;
            ans = max(ans, left + right);

            if(nums[i]) left++;
            else left = 0;
        }

        return ans;
    }
};
